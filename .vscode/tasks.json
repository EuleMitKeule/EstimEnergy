{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run EstimEnergy",
            "detail": "Run the EstimEnergy API and Web using uvicorn and Angular.",
            "dependsOn": [
                "Run EstimEnergy API",
                "Run EstimEnergy Web"
            ],
            "isBackground": true,
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Run EstimEnergy API",
            "type": "shell",
            "command": "poetry run api",
            "detail": "Run the EstimEnergy API using uvicorn.",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Run EstimEnergy Web",
            "type": "shell",
            "command": "cd estimenergy-web && ng serve",
            "detail": "Run EstimEnergy Web using Angular.",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Generate OpenAPI",
            "type": "shell",
            "command": "poetry run generate-openapi",
            "detail": "Generate OpenAPI JSON specification.",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Generate Client",
            "type": "shell",
            "command": "cd ${workspaceFolder}/estimenergy-web && npm run generate-openapi",
            "detail": "Generate API Client.",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Build Docker",
            "detail": "Build Docker Image.",
            "type": "shell",
            "command": "docker-compose -f docker-compose.dev.yml build",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Deploy Stack",
            "detail": "Deploy Stack with docker-compose.",
            "type": "shell",
            "command": "docker-compose -f docker-compose.dev.yml up",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        },
        {
            "label": "Deploy Data Services",
            "detail": "Deploy Data Services with docker-compose.",
            "type": "shell",
            "command": "docker-compose -f docker-compose.dev.yml up estimenergy-postgresql estimenergy-influxdb estimenergy-prometheus --remove-orphans",
            "problemMatcher": [],
            "promptOnClose": false,
            "runOptions": {
                "instanceLimit": 1,
            },
        }
    ]
}